apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao' // apply plugin

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.tdr.wisdome"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

        ndk {
            abiFilters "armeabi", "armeabi-v7a", "x86", "mips"
        }

        manifestPlaceholders = [
                JPUSH_PKGNAME: applicationId,
                JPUSH_APPKEY : "97ccdb4a376dd6a4d8cfe102", //JPush上注册的包名对应的appkey.
                JPUSH_CHANNEL: "developer-default", //暂时填写默认值即可.
        ]
        vectorDrawables.useSupportLibrary = true
    }

    signingConfigs {
        release {
            storeFile file("tendency_android.keystore")
            storePassword "tendency2011,tdr"
            keyAlias "tendency_android.keystore"
            keyPassword "tendency2011,tdr"
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            shrinkResources false
            signingConfig signingConfigs.release
            buildApkByType("release")
        }
        debug {
            buildApkByType("debug")
        }
    }
    lintOptions {
        disable "ResourceType"
    }
    greendao {
        targetGenDir 'src/main/java'
        schemaVersion 1
        daoPackage 'com.kingja.cardpackage.dao'//生成文件目录
    }

}

dependencies {
    /*suppport*/
    compile "com.android.support:appcompat-v7:$rootProject.ext.supportVersion"
    compile "com.android.support:recyclerview-v7:$rootProject.ext.supportVersion"
    compile "com.android.support:support-v4:$rootProject.ext.supportVersion"
    compile "com.android.support:cardview-v7:$rootProject.ext.supportVersion"
    compile "com.android.support:support-vector-drawable:$rootProject.ext.supportVersion"
    compile "com.android.support:design:$rootProject.ext.supportVersion"
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile files('libs/idcard_engine_20160322.jar')
    compile files('libs/afinal_0.5.1_bin.jar')
    compile files('libs/gson-2.3.1.jar')
    compile files('libs/AMap_3DMap_V2.4.0.jar')
    compile files('libs/AMap_Services_V2.4.0.jar')
    compile files('libs/Android_Location_V1.3.2.jar')
    compile files('libs/core-2.2.jar')
    /*===========================KingJA===========================*/
    compile project(':imagepickerModule')
    compile project(':libk-ui')
    compile files('libs/commons-codec-1.8.jar')
    compile files('libs/idcard_engine_20160322.jar')
    /*compile 'org.xutils:xutils:3.3.36'*/
    compile files('libs/commons-codec-1.8.jar')
    compile project(':libk-kupdate')
    compile project(':recyclerviewhelper')
    compile 'com.7heaven.widgets:segmentcontrol:1.14'
    compile 'com.kaopiz:kprogresshud:1.0.5'
    compile 'com.daimajia.swipelayout:library:1.2.0@aar'
    compile 'cn.jiguang:jpush:2.1.8'
    compile 'org.xutils:xutils:3.3.40'
    compile 'com.flyco.dialog:FlycoDialog_Lib:1.3.2@aar'
    compile 'com.orhanobut:logger:1.11'
    compile 'org.greenrobot:eventbus:3.0.0'
    testCompile 'junit:junit:4.12'
    /*   debugCompile 'com.squareup.leakcanary:leakcanary-android:1.5'*/
    compile 'com.kingja.supershapeview:supershapeview:1.1.1'
    compile project(':flashlighthelper')
    compile 'lib.kingja.progress:kprogress:1.2.7'
    compile 'com.kingja.loadsir:loadsir:1.3.2'
    compile 'com.clj.fastble:FastBleLib:2.1.1'
    compile 'org.greenrobot:greendao:3.2.2'
    // add library
    compile 'com.skyfishjy.ripplebackground:library:1.0.1'
    compile project(':superindicator')
}

def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}

def buildApkByType(type) {
    android.applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def outputFile = output.packageApplication.outputFile
            if (outputFile != null && variant.buildType.name == type) {
                def fileName = rootProject.ext.appName + "V${android.defaultConfig.versionName}_${releaseTime()}-" + type + ".apk"
                output.packageApplication.outputFile = new File(outputFile.parent, fileName)
            }
        }
    }
}
